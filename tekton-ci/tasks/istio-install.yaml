apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: istio-install
spec:
  params: 
  - name: ClusteName
    type: string
  - name: StateName
    type: string
  - name: AWS-KEY
    type: string
  - name: AWS-PRIVATE-KEY
    type: string
  workspaces:
  - name: output
  steps:
  - name: istio-install
    image: mclover45/kubernetes-kops:v2
    workingDir: $(workspaces.output.path)
    env:
    - name: AWS_ACCESS_KEY_ID
      value: $(params.AWS-KEY)
    - name: AWS_SECRET_ACCESS_KEY
      value: $(params.AWS-PRIVATE-KEY)
    - name: KOPS_STATE_STORE
      value: $(params.StateName)
    script: |
      kops export kubeconfig $(params.ClusteName) --admin
      istioctl install --set profile=minimal -y
  - name: create-label
    image: mclover45/kubernetes-kops:v2
    workingDir: $(workspaces.output.path)
    env:
    - name: AWS_ACCESS_KEY_ID
      value: $(params.AWS-KEY)
    - name: AWS_SECRET_ACCESS_KEY
      value: $(params.AWS-PRIVATE-KEY)
    - name: KOPS_STATE_STORE
      value: $(params.StateName)
    script: |
      kops export kubeconfig $(params.ClusteName) --admin
      kubectl label namespace wordsmith istio-injection=enabled --overwrite
  - name: apply-addons
    image: mclover45/kubernetes-kops:v2
    workingDir: $(workspaces.output.path)
    env:
    - name: AWS_ACCESS_KEY_ID
      value: $(params.AWS-KEY)
    - name: AWS_SECRET_ACCESS_KEY
      value: $(params.AWS-PRIVATE-KEY)
    - name: KOPS_STATE_STORE
      value: $(params.StateName)
    script: |
      kops export kubeconfig $(params.ClusteName) --admin
      kubectl apply -f istio-addons/kiali.yaml
      kubectl apply -f istio-addons/grafana.yaml
      kubectl apply -f istio-addons/prometheus.yaml