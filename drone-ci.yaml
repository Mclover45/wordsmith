kind: pipeline
type: docker
name: Cluster

environment:
  KOPS_STATE_STORE: s3://rbachkarou-kops

steps:
- name: Cluster install
  image: mclover45/kubernetes-kops:v2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  commands:
  - sh cluster-existing.sh

---

kind: pipeline
type: docker
name: Application

environment:
  KOPS_STATE_STORE: s3://rbachkarou-kops

steps:
- name: Application install
  image: mclover45/kubernetes-kops:v2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
    ARN_AWS:
      from_secret: ARN_AWS
  commands:
  - kops export kubeconfig wordsmith.rbachkarou.tl.scntl.com --admin
  - kops validate cluster --wait 10m --state=s3://rbachkarou-kops
  # ingress install
  -  kubectl apply -f ingress/ic-nginx-lb.yaml
  ###- sleep 120
  # Istio install 
  -  istioctl install --set profile=minimal -y
  # Labeled for istio
  ###- kubectl create namespace wordsmith
  - kubectl label namespace wordsmith istio-injection=enabled --overwrite
  # install grafana and kiali and prometeus
  - kubectl apply -f istio-addons/kiali.yaml
  - kubectl apply -f istio-addons/grafana.yaml
  - kubectl apply -f istio-addons/prometheus.yaml
  # Decrypt the value
  - sops -d -i --kms $ARN_AWS helm/wordsmith-demo/values.yaml
  # App install
  - helm install wordsmith-demo helm/wordsmith-demo
  # ingress install
  - kubectl apply -f ingress/app-ingress.yml
  # Give data
  - kubectl get svc --all-namespaces
  # Update DNS record
  - apt install -y moreutils
  - HOST_NAME_KUBE=$(kubectl -n ingress-nginx get svc ingress-nginx-controller  -o json | jq .status.loadBalancer.ingress[].hostname)
  - jq '.Changes[].ResourceRecordSet.ResourceRecords[].Value = "$HOST_NAME_KUBE"' app.json | sponge app.json
  - jq '.Changes[].ResourceRecordSet.ResourceRecords[].Value = "$HOST_NAME_KUBE"' grafana.json | sponge grafana.json
  - jq '.Changes[].ResourceRecordSet.ResourceRecords[].Value = "$HOST_NAME_KUBE"' kiali.json | sponge kiali.json
  - aws route53 change-resource-record-sets --hosted-zone-id Z0756289421EHRZG13O5 --change-batch file://app.json
  - aws route53 change-resource-record-sets --hosted-zone-id Z0756289421EHRZG13O5 --change-batch file://grafana.json
  - aws route53 change-resource-record-sets --hosted-zone-id Z0756289421EHRZG13O5 --change-batch file://kiali.json

depends_on:
- Cluster