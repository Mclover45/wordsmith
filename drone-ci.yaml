kind: pipeline
type: docker
name: default

steps:
- name: Cluster install
  image: mclover45/kubernetes-kops
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  commands:
  # Create cluster
  - kops create cluster --name=wordsmith.rbachkarou.tl.scntl.com --state=s3://rbachkarou-kops --zones=eu-central-1a --node-count=2 --node-size=t3.medium --master-size=t3.medium
  - kops update cluster --name wordsmith.rbachkarou.tl.scntl.com --yes --admin --state=s3://rbachkarou-kops
  - kops validate cluster --wait 10m --state=s3://rbachkarou-kops
  # ingress install
  - kubectl apply -f /drone/src/wordsmith/app-ingress.yml
  - kubectl apply -f /drone/src/wordsmith/ic-nginx-lb.yaml
  # Istio install 
  - istioctl install --set profile=minimal -y
  # Labeled for istio
  - kubectl create namespace wordsmith
  - kubectl label namespace wordsmith istio-injection=enabled
  # install grafana and kiali
  - kubectl apply -f /drone/src/istio-1.13.2/samples/addons/kiali.yaml
  - kubectl apply -f /drone/src/istio-1.13.2/samples/addons/grafana.yaml
  - kubectl apply -f /drone/src/istio-1.13.2/samples/addons/prometheus.yaml
  
 # kubectl context
  # App install
  - helm install wordsmith-demo /drone/src/wordsmith/helm/wordsmith-demo
  # Give data
  - kubectl get svc --all-namespaces